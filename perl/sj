#!/usr/bin/perl -w
# lets user use short-hand for conman sj  and  conman "setsym 2 sj " commands.
#     sj computer#jobStream          # for today's schedules
# or  sj computer#jobStream 2        # for setsym 2 schedule
# or  sj 2 computer#jobStream        # likewise, for setsym 2 schedule
# or  sj  computer#jobStream 2 stdl        # likewise, for setsym 2 schedule
# or  sj  computer#jobStream  stdl  2      # likewise, for setsym 2 schedule
#
# Script also filters out the ibm BS that we do not want to see, letting us see
# the output better.

use strict;

my @args;
my $ssym = '';
foreach (@ARGV){
   if ( /\D/ ){                            # if not a number
      push @args, $_;
   } else {
      if ( $ssym ) {
         print "Too many numbers. Dropping $_ \n";
      } else {
         $ssym = "setsym " . $_ ." &";
      }
   }
}

print `conman "$ssym sj @args" 2>/dev/null | grep -ve "^Scheduled for" -ve "^Workstation " -ve "(Est)" `;

# `echo 'conman $ssym sj @args 2>/dev/null' | grep -ve "^Scheduled for" -ve "^Workstation " -ve "(Est)" >> sj_output `;
# print('conman $ssym sj @args 2>/dev/null | grep -ve "^Scheduled for" -ve "^Workstation " -ve "(Est)', "\n");

